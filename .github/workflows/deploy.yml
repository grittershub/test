name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Build
        run: echo "nothing to do (cdk.out is committed)"
      - run: echo post-build
  Assets-DockerAsset1:
    name: Publish Assets Assets-DockerAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::825658461077:role/GitHubTest
      - uses: docker/login-action@v1
        with:
          registry: 000000000000.dkr.ecr.us-east-1.amazonaws.com
      - id: Publish
        name: Publish Assets-DockerAsset1
        run: /bin/bash ./cdk.out/publish-Assets-DockerAsset1-step.sh
  Assets-FileAsset1:
    name: Publish Assets Assets-FileAsset1
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::825658461077:role/GitHubTest
      - id: Publish
        name: Publish Assets-FileAsset1
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset1-step.sh
  Assets-FileAsset2:
    name: Publish Assets Assets-FileAsset2
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::825658461077:role/GitHubTest
      - id: Publish
        name: Publish Assets-FileAsset2
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset2-step.sh
  Assets-FileAsset3:
    name: Publish Assets Assets-FileAsset3
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::825658461077:role/GitHubTest
      - id: Publish
        name: Publish Assets-FileAsset3
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset3-step.sh
  Assets-FileAsset4:
    name: Publish Assets Assets-FileAsset4
    needs:
      - Build-Build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      asset-hash: ${{ steps.Publish.outputs.asset-hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install --no-save cdk-assets
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::825658461077:role/GitHubTest
      - id: Publish
        name: Publish Assets-FileAsset4
        run: /bin/bash ./cdk.out/publish-Assets-FileAsset4-step.sh
  StageA-Pre:
    name: Pre
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - Build-Build
    env: {}
    steps:
      - run: echo hello
  StageA-BucketStack-Deploy:
    name: Deploy StageABucketStackEAC67DBE
    permissions:
      contents: read
      id-token: write
    needs:
      - Build-Build
      - Assets-FileAsset1
      - Assets-FileAsset2
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::825658461077:role/GitHubTest
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::825658461077:role/cdk-hnb659fds-deploy-role-825658461077-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-BucketStack
          template: https://cdk-hnb659fds-assets-825658461077-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset1.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::825658461077:role/cdk-hnb659fds-cfn-exec-role-825658461077-ap-southeast-2
  StageA-FunctionStack-Deploy:
    name: Deploy StageAFunctionStackD42C27B8
    permissions:
      contents: read
      id-token: write
    needs:
      - Build-Build
      - Assets-FileAsset3
      - Assets-FileAsset4
      - Assets-DockerAsset1
      - StageA-BucketStack-Deploy
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::825658461077:role/GitHubTest
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::825658461077:role/cdk-hnb659fds-deploy-role-825658461077-ap-southeast-2
          role-external-id: Pipeline
      - id: Deploy
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: StageA-FunctionStack
          template: https://cdk-hnb659fds-assets-825658461077-ap-southeast-2.s3.ap-southeast-2.amazonaws.com/${{
            needs.Assets-FileAsset3.outputs.asset-hash }}.json
          no-fail-on-empty-changeset: "1"
          role-arn: arn:aws:iam::825658461077:role/cdk-hnb659fds-cfn-exec-role-825658461077-ap-southeast-2
    outputs:
      myout: ${{ steps.Deploy.outputs.myout }}
  StageA-Post:
    name: Post
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - StageA-FunctionStack-Deploy
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - Build-Build
    env:
      FN_NAME: ${{ needs.StageA-FunctionStack-Deploy.outputs.myout }}
    steps:
      - run: "echo FN_NAME equals: $FN_NAME"
